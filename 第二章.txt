第二章 容器 ：镜像的运行状态
2.1 容器的管理操作

  2.1.1 创建容器

  *docker create 镜像名称
    该命令执行的效果类似于docker run -d，即创建一个将在系统后台运行的容器
    但是与docker run -d不同的是，docker create创建的容器并未实际启动，还需要执行docker start命令或docker run命令以启动容器。事实上，docker create命令常用于在启动容器之前进行必要的设置。

  *docker run 创建容器后并启动容器
    /创建交互型容器 docker run -it --name 容器名称 镜像名称 命令
    /创建后台型容器 docker run -d --name 容器名称 镜像名称 命令

  *docker run 与docker create区别
  ------------------------------
  准备条件：镜像busybox
  /
  创建容器$：docker create --name 001  busybox /bin/sh -c "while true;do echo hello world;sleep 1;done"
  启动容器$:docker start 001
  效果：什么都没有，但是docker ps 可以查看到001正在运行
  /
  创建并启动容器$:docker run --name 001  busybox /bin/sh -c "while true;do echo hello world;sleep 1;done"
  效果一直输出：hello world

  2.1.2 查看容器

  *查看正在运行的容器 ： docker ps 
  *查看所有容器 ： docker ps -a 
  *列出最后创建的容器 ： docker ps -l

  2.1.3 启动容器
    *docker start 容器名
    注意：这里有点话说：docker run -d centos 字面意思是后台运行一个centos容器，但是使用docker ps一看，后台没有正在运行的容器
    原因：   
    		1、docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出,所以为什么很多容器加个 /bin/bash
			2、容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出
			3、这个是 docker 的机制问题

  2.1.4 终止容器
    *docker stop 容器名
  2.1.5 删除容器
  *docker rm 容器名或ID
  *删除所有容器-a表示所有，-q表示只显示容器ID：docker rm $(docker ps -a -q)

2.2 容器内信息获取和命令执行
  2.2.1 依附容器
    *对于交互型容器可以使用attach依附操作，因为当我们使用docker start 或者restart启动容器，而不是docker run-it启动容器时，我们可以使用attach与容器交互
      docker attach 容器名
    注意：无法对后台型容器使用，因为attach命令就是使用现有终端，如果你要退出容器操作，那么bash结束，容器也就退出了。

  2.2.2 查看容器日志
  *首先创建不断输出日志的后台型容器
    $ docker run -d --name deamon_logs ubuntu /bin/bash -c 'for((i=0;1;i++));do echo $i;sleep 1 ;done;'
  *查看日志
    docker logs -f deamon_logs 其中-f表示实时查看
  *查看倒数部分日志
    docker logs -f --tail=5 -t daemon_logs 其中--tail表示倒数，-t表示时间

  2.2.3 查看容器进程
    docker top 容器名称

  2.2.4 查看容器信息
    docker inspect 容器名称

  2.2.5 容器内执行命令
    *docker exec 
      一个容器运行过程中，我们可以使用docker exec 来创建任务。
    *后台任务
      docker exec -d 容器名 执行命令

    *交互型任务
      docker exec -it 容器名 /bin/bash

2.3容器的导入和导出
  *导出
    docker export 容器名 > 保存的文件名
  *导入
    cat 容器文件 | docker import - imported:container