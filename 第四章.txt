第四章 数据卷及容器连接
4.1容器网络基础
  Docker启动时候，它会在宿主主机上创建一个名为docker0的虚拟网络接口
4.1.1暴露网络接口
  *-P（大写）参数，Docker会在宿主机上随机为应用分配一个49000-49900内未使用的端口。
  *-p（小写），-p 主机端口：容器端口
    例如：docker run -d -p 80:5000 training/webapp python app.py

4.1.2查看网络配置
  *docker inspect

4.2数据卷
  4.2.1随机创建数据卷
  *docker run -d -v /webapp training/webapp python app.py
  -----------------
  "Mounts": [
            {
                "Type": "volume",
                "Name": "3e48d5066707fb7670495a0802b29a001c75fd15c4b2ed2c8f4ea2a296dc9b87",
                "Source": "/var/lib/docker/volumes/3e48d5066707fb7670495a0802b29a001c75fd15c4b2ed2c8f4ea2a296dc9b87/_data",
                "Destination": "/webapp",
                "Driver": "local",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ]
        source为主机对应的目录
        destination为容器的目录
  -------------------

  4.2.2挂载主机目录为数据卷
  *docker run -d --name webapp -v /data:/webapp
  两个路径都为绝对路径

  4.2.3挂载主机文件作为数据卷
  同理上述

  4.2.4数据卷容器
  如果用户需要在多个容器之间共享一些持续更新的数据，最简单的方式是使用数据卷容器。数据卷容器也是一个容器，但是它的目的是专门用来提供数据卷供其他容器挂载。
  *首先，创建一个数据卷容器dbdata，并在其中创建一个数据卷挂载到/dbdata：
    $ docker run -it -v /dbdata --name dbdata ubuntu
  *在其他容器中使用--volumes-from来挂载dbdata容器中的数据卷.
    docker run -it --volumes-from dbdata --name db1 ubuntu
    docker run -it --volumes-from dbdata --name db2 ubuntu
  *容器db1和db2都挂载同一个数据卷到相同的/dbdata目录。三个容器任何一方在该目录下的写入，其他容器都可以看到
  *使用--volumes-from参数所挂载数据卷的容器自身并不需要保持在运行状态
  *如果删除了挂载的容器（包括dbdata、db1和db2），数据卷并不会被自动删除。如果要删除一个数据卷，必须在删除最后一个还挂载着它的容器时显式使用docker rm -v命令来指定同时删除关联的容器。


  4.3备份
  *使用下面的命令来备份dbdata数据卷容器内的数据卷：
  $ docker run --volumes-from dbdata -v $(pwd):/backup --name worker ubuntu tar cvf /backup/backup.tar /dbdata
  首先利用ubuntu镜像创建了一个容器worker。使用--volumes-from dbdata参数来让worker容器挂载dbdata容器的数据卷(即dbdata数据卷),使用-v  $(pwd):/backup参数来挂载本地的当前目录到worker容器的/backup目录。worker容器启动后，使用了tar cvf  /backup/backup.tar /dbdata命令来将/dbdata下内容备份为容器内的/backup/backup.tar，即宿主主机当前目录下的backup.tar。

  2.恢复
  如果要将数据恢复到一个容器，可以按照下面的步骤操作。
  首先创建一个带有数据卷的容器dbdata2：
  $ docker run -v /dbdata --name dbdata2 ubuntu /bin/bash
  然后创建另一个新的容器，挂载dbdata2的容器，并使用untar解压备份文件到所挂载的容器卷中：
  $ docker run --volumes-from dbdata2 -v $(pwd):/backup --name worker ubuntu bash
  cd /dbdata
  tar xvf /backup/backup.tar
